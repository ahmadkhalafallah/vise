// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dataset_entry.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dataset_entry.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace rr {

namespace {

const ::google::protobuf::Descriptor* datasetEntry_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  datasetEntry_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_dataset_5fentry_2eproto() {
  protobuf_AddDesc_dataset_5fentry_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "dataset_entry.proto");
  GOOGLE_CHECK(file != NULL);
  datasetEntry_descriptor_ = file->message_type(0);
  static const int datasetEntry_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(datasetEntry, filename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(datasetEntry, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(datasetEntry, height_),
  };
  datasetEntry_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      datasetEntry_descriptor_,
      datasetEntry::default_instance_,
      datasetEntry_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(datasetEntry, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(datasetEntry, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(datasetEntry));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_dataset_5fentry_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    datasetEntry_descriptor_, &datasetEntry::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_dataset_5fentry_2eproto() {
  delete datasetEntry::default_instance_;
  delete datasetEntry_reflection_;
}

void protobuf_AddDesc_dataset_5fentry_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023dataset_entry.proto\022\002rr\"G\n\014datasetEntr"
    "y\022\020\n\010filename\030\001 \003(\t\022\021\n\005width\030\002 \003(\rB\002\020\001\022\022"
    "\n\006height\030\003 \003(\rB\002\020\001B\002H\001", 102);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dataset_entry.proto", &protobuf_RegisterTypes);
  datasetEntry::default_instance_ = new datasetEntry();
  datasetEntry::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_dataset_5fentry_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_dataset_5fentry_2eproto {
  StaticDescriptorInitializer_dataset_5fentry_2eproto() {
    protobuf_AddDesc_dataset_5fentry_2eproto();
  }
} static_descriptor_initializer_dataset_5fentry_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int datasetEntry::kFilenameFieldNumber;
const int datasetEntry::kWidthFieldNumber;
const int datasetEntry::kHeightFieldNumber;
#endif  // !_MSC_VER

datasetEntry::datasetEntry()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rr.datasetEntry)
}

void datasetEntry::InitAsDefaultInstance() {
}

datasetEntry::datasetEntry(const datasetEntry& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rr.datasetEntry)
}

void datasetEntry::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

datasetEntry::~datasetEntry() {
  // @@protoc_insertion_point(destructor:rr.datasetEntry)
  SharedDtor();
}

void datasetEntry::SharedDtor() {
  if (this != default_instance_) {
  }
}

void datasetEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* datasetEntry::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return datasetEntry_descriptor_;
}

const datasetEntry& datasetEntry::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dataset_5fentry_2eproto();
  return *default_instance_;
}

datasetEntry* datasetEntry::default_instance_ = NULL;

datasetEntry* datasetEntry::New() const {
  return new datasetEntry;
}

void datasetEntry::Clear() {
  filename_.Clear();
  width_.Clear();
  height_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool datasetEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rr.datasetEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string filename = 1;
      case 1: {
        if (tag == 10) {
         parse_filename:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename(this->filename_size() - 1).data(),
            this->filename(this->filename_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "filename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_filename;
        if (input->ExpectTag(18)) goto parse_width;
        break;
      }

      // repeated uint32 width = 2 [packed = true];
      case 2: {
        if (tag == 18) {
         parse_width:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_width())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18, input, this->mutable_width())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_height;
        break;
      }

      // repeated uint32 height = 3 [packed = true];
      case 3: {
        if (tag == 26) {
         parse_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_height())));
        } else if (tag == 24) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26, input, this->mutable_height())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rr.datasetEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rr.datasetEntry)
  return false;
#undef DO_
}

void datasetEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rr.datasetEntry)
  // repeated string filename = 1;
  for (int i = 0; i < this->filename_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->filename(i).data(), this->filename(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "filename");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->filename(i), output);
  }

  // repeated uint32 width = 2 [packed = true];
  if (this->width_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_width_cached_byte_size_);
  }
  for (int i = 0; i < this->width_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->width(i), output);
  }

  // repeated uint32 height = 3 [packed = true];
  if (this->height_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_height_cached_byte_size_);
  }
  for (int i = 0; i < this->height_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->height(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:rr.datasetEntry)
}

::google::protobuf::uint8* datasetEntry::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rr.datasetEntry)
  // repeated string filename = 1;
  for (int i = 0; i < this->filename_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename(i).data(), this->filename(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filename");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->filename(i), target);
  }

  // repeated uint32 width = 2 [packed = true];
  if (this->width_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _width_cached_byte_size_, target);
  }
  for (int i = 0; i < this->width_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->width(i), target);
  }

  // repeated uint32 height = 3 [packed = true];
  if (this->height_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _height_cached_byte_size_, target);
  }
  for (int i = 0; i < this->height_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->height(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rr.datasetEntry)
  return target;
}

int datasetEntry::ByteSize() const {
  int total_size = 0;

  // repeated string filename = 1;
  total_size += 1 * this->filename_size();
  for (int i = 0; i < this->filename_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->filename(i));
  }

  // repeated uint32 width = 2 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->width_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->width(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _width_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 height = 3 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->height_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->height(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _height_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void datasetEntry::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const datasetEntry* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const datasetEntry*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void datasetEntry::MergeFrom(const datasetEntry& from) {
  GOOGLE_CHECK_NE(&from, this);
  filename_.MergeFrom(from.filename_);
  width_.MergeFrom(from.width_);
  height_.MergeFrom(from.height_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void datasetEntry::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void datasetEntry::CopyFrom(const datasetEntry& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool datasetEntry::IsInitialized() const {

  return true;
}

void datasetEntry::Swap(datasetEntry* other) {
  if (other != this) {
    filename_.Swap(&other->filename_);
    width_.Swap(&other->width_);
    height_.Swap(&other->height_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata datasetEntry::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = datasetEntry_descriptor_;
  metadata.reflection = datasetEntry_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace rr

// @@protoc_insertion_point(global_scope)
