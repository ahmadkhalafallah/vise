// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dataset_entry.proto

#ifndef PROTOBUF_dataset_5fentry_2eproto__INCLUDED
#define PROTOBUF_dataset_5fentry_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace rr {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_dataset_5fentry_2eproto();
void protobuf_AssignDesc_dataset_5fentry_2eproto();
void protobuf_ShutdownFile_dataset_5fentry_2eproto();

class datasetEntry;

// ===================================================================

class datasetEntry : public ::google::protobuf::Message {
 public:
  datasetEntry();
  virtual ~datasetEntry();

  datasetEntry(const datasetEntry& from);

  inline datasetEntry& operator=(const datasetEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const datasetEntry& default_instance();

  void Swap(datasetEntry* other);

  // implements Message ----------------------------------------------

  datasetEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const datasetEntry& from);
  void MergeFrom(const datasetEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string filename = 1;
  inline int filename_size() const;
  inline void clear_filename();
  static const int kFilenameFieldNumber = 1;
  inline const ::std::string& filename(int index) const;
  inline ::std::string* mutable_filename(int index);
  inline void set_filename(int index, const ::std::string& value);
  inline void set_filename(int index, const char* value);
  inline void set_filename(int index, const char* value, size_t size);
  inline ::std::string* add_filename();
  inline void add_filename(const ::std::string& value);
  inline void add_filename(const char* value);
  inline void add_filename(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& filename() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_filename();

  // repeated uint32 width = 2 [packed = true];
  inline int width_size() const;
  inline void clear_width();
  static const int kWidthFieldNumber = 2;
  inline ::google::protobuf::uint32 width(int index) const;
  inline void set_width(int index, ::google::protobuf::uint32 value);
  inline void add_width(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      width() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_width();

  // repeated uint32 height = 3 [packed = true];
  inline int height_size() const;
  inline void clear_height();
  static const int kHeightFieldNumber = 3;
  inline ::google::protobuf::uint32 height(int index) const;
  inline void set_height(int index, ::google::protobuf::uint32 value);
  inline void add_height(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      height() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_height();

  // @@protoc_insertion_point(class_scope:rr.datasetEntry)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> filename_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > width_;
  mutable int _width_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > height_;
  mutable int _height_cached_byte_size_;
  friend void  protobuf_AddDesc_dataset_5fentry_2eproto();
  friend void protobuf_AssignDesc_dataset_5fentry_2eproto();
  friend void protobuf_ShutdownFile_dataset_5fentry_2eproto();

  void InitAsDefaultInstance();
  static datasetEntry* default_instance_;
};
// ===================================================================


// ===================================================================

// datasetEntry

// repeated string filename = 1;
inline int datasetEntry::filename_size() const {
  return filename_.size();
}
inline void datasetEntry::clear_filename() {
  filename_.Clear();
}
inline const ::std::string& datasetEntry::filename(int index) const {
  // @@protoc_insertion_point(field_get:rr.datasetEntry.filename)
  return filename_.Get(index);
}
inline ::std::string* datasetEntry::mutable_filename(int index) {
  // @@protoc_insertion_point(field_mutable:rr.datasetEntry.filename)
  return filename_.Mutable(index);
}
inline void datasetEntry::set_filename(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:rr.datasetEntry.filename)
  filename_.Mutable(index)->assign(value);
}
inline void datasetEntry::set_filename(int index, const char* value) {
  filename_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:rr.datasetEntry.filename)
}
inline void datasetEntry::set_filename(int index, const char* value, size_t size) {
  filename_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rr.datasetEntry.filename)
}
inline ::std::string* datasetEntry::add_filename() {
  return filename_.Add();
}
inline void datasetEntry::add_filename(const ::std::string& value) {
  filename_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:rr.datasetEntry.filename)
}
inline void datasetEntry::add_filename(const char* value) {
  filename_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:rr.datasetEntry.filename)
}
inline void datasetEntry::add_filename(const char* value, size_t size) {
  filename_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:rr.datasetEntry.filename)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
datasetEntry::filename() const {
  // @@protoc_insertion_point(field_list:rr.datasetEntry.filename)
  return filename_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
datasetEntry::mutable_filename() {
  // @@protoc_insertion_point(field_mutable_list:rr.datasetEntry.filename)
  return &filename_;
}

// repeated uint32 width = 2 [packed = true];
inline int datasetEntry::width_size() const {
  return width_.size();
}
inline void datasetEntry::clear_width() {
  width_.Clear();
}
inline ::google::protobuf::uint32 datasetEntry::width(int index) const {
  // @@protoc_insertion_point(field_get:rr.datasetEntry.width)
  return width_.Get(index);
}
inline void datasetEntry::set_width(int index, ::google::protobuf::uint32 value) {
  width_.Set(index, value);
  // @@protoc_insertion_point(field_set:rr.datasetEntry.width)
}
inline void datasetEntry::add_width(::google::protobuf::uint32 value) {
  width_.Add(value);
  // @@protoc_insertion_point(field_add:rr.datasetEntry.width)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
datasetEntry::width() const {
  // @@protoc_insertion_point(field_list:rr.datasetEntry.width)
  return width_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
datasetEntry::mutable_width() {
  // @@protoc_insertion_point(field_mutable_list:rr.datasetEntry.width)
  return &width_;
}

// repeated uint32 height = 3 [packed = true];
inline int datasetEntry::height_size() const {
  return height_.size();
}
inline void datasetEntry::clear_height() {
  height_.Clear();
}
inline ::google::protobuf::uint32 datasetEntry::height(int index) const {
  // @@protoc_insertion_point(field_get:rr.datasetEntry.height)
  return height_.Get(index);
}
inline void datasetEntry::set_height(int index, ::google::protobuf::uint32 value) {
  height_.Set(index, value);
  // @@protoc_insertion_point(field_set:rr.datasetEntry.height)
}
inline void datasetEntry::add_height(::google::protobuf::uint32 value) {
  height_.Add(value);
  // @@protoc_insertion_point(field_add:rr.datasetEntry.height)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
datasetEntry::height() const {
  // @@protoc_insertion_point(field_list:rr.datasetEntry.height)
  return height_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
datasetEntry::mutable_height() {
  // @@protoc_insertion_point(field_mutable_list:rr.datasetEntry.height)
  return &height_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace rr

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_dataset_5fentry_2eproto__INCLUDED
